/*
NetBox REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.6.1 (3.6)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package netbox

import (
	"encoding/json"
	"time"
)

// checks if the PatchedApplicationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PatchedApplicationRequest{}

// PatchedApplicationRequest Adds support for custom fields and tags.
type PatchedApplicationRequest struct {
	// Name of the Application
	Name *string `json:"name,omitempty"`
	// Operational status of this Application  * `running` - Running * `stopped` - Stopped * `not_running` - Not running * `deprecated` - Deprecated
	Status *string `json:"status,omitempty"`
	Comments *string `json:"comments,omitempty"`
	Tags []NestedTagRequest `json:"tags,omitempty"`
	CustomFields map[string]interface{} `json:"custom_fields,omitempty"`
	Device NullableInt32 `json:"device,omitempty"`
	// Maximum CPU Usage in cores or total percent (100% * number of cores) - 0 for no limit
	CpuLimit *string `json:"cpu_limit,omitempty"`
	// Maximum RAM Usage in MegaBytes - 0 for no limit
	RamLimit *float64 `json:"ram_limit,omitempty"`
	// Idle CPU Usage in cores or total percent (100% * number of cores) - 0 for unknown or none
	IdleCpu *string `json:"idle_cpu,omitempty"`
	// * `none` - None * `systemd` - Systemd * `docker` - Docker * `podman` - Podman * `kubernetes` - Kubernetes
	ApplicationManager *string `json:"application_manager,omitempty"`
	Group NullableInt32 `json:"group,omitempty"`
	// Version of the Application
	Version *string `json:"version,omitempty"`
	LastVersionUpgrade NullableTime `json:"last_version_upgrade,omitempty"`
}

// NewPatchedApplicationRequest instantiates a new PatchedApplicationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchedApplicationRequest() *PatchedApplicationRequest {
	this := PatchedApplicationRequest{}
	return &this
}

// NewPatchedApplicationRequestWithDefaults instantiates a new PatchedApplicationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchedApplicationRequestWithDefaults() *PatchedApplicationRequest {
	this := PatchedApplicationRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PatchedApplicationRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedApplicationRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PatchedApplicationRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PatchedApplicationRequest) SetName(v string) {
	o.Name = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *PatchedApplicationRequest) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedApplicationRequest) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *PatchedApplicationRequest) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *PatchedApplicationRequest) SetStatus(v string) {
	o.Status = &v
}

// GetComments returns the Comments field value if set, zero value otherwise.
func (o *PatchedApplicationRequest) GetComments() string {
	if o == nil || IsNil(o.Comments) {
		var ret string
		return ret
	}
	return *o.Comments
}

// GetCommentsOk returns a tuple with the Comments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedApplicationRequest) GetCommentsOk() (*string, bool) {
	if o == nil || IsNil(o.Comments) {
		return nil, false
	}
	return o.Comments, true
}

// HasComments returns a boolean if a field has been set.
func (o *PatchedApplicationRequest) HasComments() bool {
	if o != nil && !IsNil(o.Comments) {
		return true
	}

	return false
}

// SetComments gets a reference to the given string and assigns it to the Comments field.
func (o *PatchedApplicationRequest) SetComments(v string) {
	o.Comments = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *PatchedApplicationRequest) GetTags() []NestedTagRequest {
	if o == nil || IsNil(o.Tags) {
		var ret []NestedTagRequest
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedApplicationRequest) GetTagsOk() ([]NestedTagRequest, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *PatchedApplicationRequest) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []NestedTagRequest and assigns it to the Tags field.
func (o *PatchedApplicationRequest) SetTags(v []NestedTagRequest) {
	o.Tags = v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise.
func (o *PatchedApplicationRequest) GetCustomFields() map[string]interface{} {
	if o == nil || IsNil(o.CustomFields) {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedApplicationRequest) GetCustomFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return map[string]interface{}{}, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *PatchedApplicationRequest) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given map[string]interface{} and assigns it to the CustomFields field.
func (o *PatchedApplicationRequest) SetCustomFields(v map[string]interface{}) {
	o.CustomFields = v
}

// GetDevice returns the Device field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedApplicationRequest) GetDevice() int32 {
	if o == nil || IsNil(o.Device.Get()) {
		var ret int32
		return ret
	}
	return *o.Device.Get()
}

// GetDeviceOk returns a tuple with the Device field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedApplicationRequest) GetDeviceOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Device.Get(), o.Device.IsSet()
}

// HasDevice returns a boolean if a field has been set.
func (o *PatchedApplicationRequest) HasDevice() bool {
	if o != nil && o.Device.IsSet() {
		return true
	}

	return false
}

// SetDevice gets a reference to the given NullableInt32 and assigns it to the Device field.
func (o *PatchedApplicationRequest) SetDevice(v int32) {
	o.Device.Set(&v)
}
// SetDeviceNil sets the value for Device to be an explicit nil
func (o *PatchedApplicationRequest) SetDeviceNil() {
	o.Device.Set(nil)
}

// UnsetDevice ensures that no value is present for Device, not even an explicit nil
func (o *PatchedApplicationRequest) UnsetDevice() {
	o.Device.Unset()
}

// GetCpuLimit returns the CpuLimit field value if set, zero value otherwise.
func (o *PatchedApplicationRequest) GetCpuLimit() string {
	if o == nil || IsNil(o.CpuLimit) {
		var ret string
		return ret
	}
	return *o.CpuLimit
}

// GetCpuLimitOk returns a tuple with the CpuLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedApplicationRequest) GetCpuLimitOk() (*string, bool) {
	if o == nil || IsNil(o.CpuLimit) {
		return nil, false
	}
	return o.CpuLimit, true
}

// HasCpuLimit returns a boolean if a field has been set.
func (o *PatchedApplicationRequest) HasCpuLimit() bool {
	if o != nil && !IsNil(o.CpuLimit) {
		return true
	}

	return false
}

// SetCpuLimit gets a reference to the given string and assigns it to the CpuLimit field.
func (o *PatchedApplicationRequest) SetCpuLimit(v string) {
	o.CpuLimit = &v
}

// GetRamLimit returns the RamLimit field value if set, zero value otherwise.
func (o *PatchedApplicationRequest) GetRamLimit() float64 {
	if o == nil || IsNil(o.RamLimit) {
		var ret float64
		return ret
	}
	return *o.RamLimit
}

// GetRamLimitOk returns a tuple with the RamLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedApplicationRequest) GetRamLimitOk() (*float64, bool) {
	if o == nil || IsNil(o.RamLimit) {
		return nil, false
	}
	return o.RamLimit, true
}

// HasRamLimit returns a boolean if a field has been set.
func (o *PatchedApplicationRequest) HasRamLimit() bool {
	if o != nil && !IsNil(o.RamLimit) {
		return true
	}

	return false
}

// SetRamLimit gets a reference to the given float64 and assigns it to the RamLimit field.
func (o *PatchedApplicationRequest) SetRamLimit(v float64) {
	o.RamLimit = &v
}

// GetIdleCpu returns the IdleCpu field value if set, zero value otherwise.
func (o *PatchedApplicationRequest) GetIdleCpu() string {
	if o == nil || IsNil(o.IdleCpu) {
		var ret string
		return ret
	}
	return *o.IdleCpu
}

// GetIdleCpuOk returns a tuple with the IdleCpu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedApplicationRequest) GetIdleCpuOk() (*string, bool) {
	if o == nil || IsNil(o.IdleCpu) {
		return nil, false
	}
	return o.IdleCpu, true
}

// HasIdleCpu returns a boolean if a field has been set.
func (o *PatchedApplicationRequest) HasIdleCpu() bool {
	if o != nil && !IsNil(o.IdleCpu) {
		return true
	}

	return false
}

// SetIdleCpu gets a reference to the given string and assigns it to the IdleCpu field.
func (o *PatchedApplicationRequest) SetIdleCpu(v string) {
	o.IdleCpu = &v
}

// GetApplicationManager returns the ApplicationManager field value if set, zero value otherwise.
func (o *PatchedApplicationRequest) GetApplicationManager() string {
	if o == nil || IsNil(o.ApplicationManager) {
		var ret string
		return ret
	}
	return *o.ApplicationManager
}

// GetApplicationManagerOk returns a tuple with the ApplicationManager field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedApplicationRequest) GetApplicationManagerOk() (*string, bool) {
	if o == nil || IsNil(o.ApplicationManager) {
		return nil, false
	}
	return o.ApplicationManager, true
}

// HasApplicationManager returns a boolean if a field has been set.
func (o *PatchedApplicationRequest) HasApplicationManager() bool {
	if o != nil && !IsNil(o.ApplicationManager) {
		return true
	}

	return false
}

// SetApplicationManager gets a reference to the given string and assigns it to the ApplicationManager field.
func (o *PatchedApplicationRequest) SetApplicationManager(v string) {
	o.ApplicationManager = &v
}

// GetGroup returns the Group field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedApplicationRequest) GetGroup() int32 {
	if o == nil || IsNil(o.Group.Get()) {
		var ret int32
		return ret
	}
	return *o.Group.Get()
}

// GetGroupOk returns a tuple with the Group field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedApplicationRequest) GetGroupOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Group.Get(), o.Group.IsSet()
}

// HasGroup returns a boolean if a field has been set.
func (o *PatchedApplicationRequest) HasGroup() bool {
	if o != nil && o.Group.IsSet() {
		return true
	}

	return false
}

// SetGroup gets a reference to the given NullableInt32 and assigns it to the Group field.
func (o *PatchedApplicationRequest) SetGroup(v int32) {
	o.Group.Set(&v)
}
// SetGroupNil sets the value for Group to be an explicit nil
func (o *PatchedApplicationRequest) SetGroupNil() {
	o.Group.Set(nil)
}

// UnsetGroup ensures that no value is present for Group, not even an explicit nil
func (o *PatchedApplicationRequest) UnsetGroup() {
	o.Group.Unset()
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *PatchedApplicationRequest) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedApplicationRequest) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *PatchedApplicationRequest) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *PatchedApplicationRequest) SetVersion(v string) {
	o.Version = &v
}

// GetLastVersionUpgrade returns the LastVersionUpgrade field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedApplicationRequest) GetLastVersionUpgrade() time.Time {
	if o == nil || IsNil(o.LastVersionUpgrade.Get()) {
		var ret time.Time
		return ret
	}
	return *o.LastVersionUpgrade.Get()
}

// GetLastVersionUpgradeOk returns a tuple with the LastVersionUpgrade field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedApplicationRequest) GetLastVersionUpgradeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastVersionUpgrade.Get(), o.LastVersionUpgrade.IsSet()
}

// HasLastVersionUpgrade returns a boolean if a field has been set.
func (o *PatchedApplicationRequest) HasLastVersionUpgrade() bool {
	if o != nil && o.LastVersionUpgrade.IsSet() {
		return true
	}

	return false
}

// SetLastVersionUpgrade gets a reference to the given NullableTime and assigns it to the LastVersionUpgrade field.
func (o *PatchedApplicationRequest) SetLastVersionUpgrade(v time.Time) {
	o.LastVersionUpgrade.Set(&v)
}
// SetLastVersionUpgradeNil sets the value for LastVersionUpgrade to be an explicit nil
func (o *PatchedApplicationRequest) SetLastVersionUpgradeNil() {
	o.LastVersionUpgrade.Set(nil)
}

// UnsetLastVersionUpgrade ensures that no value is present for LastVersionUpgrade, not even an explicit nil
func (o *PatchedApplicationRequest) UnsetLastVersionUpgrade() {
	o.LastVersionUpgrade.Unset()
}

func (o PatchedApplicationRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PatchedApplicationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Comments) {
		toSerialize["comments"] = o.Comments
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.CustomFields) {
		toSerialize["custom_fields"] = o.CustomFields
	}
	if o.Device.IsSet() {
		toSerialize["device"] = o.Device.Get()
	}
	if !IsNil(o.CpuLimit) {
		toSerialize["cpu_limit"] = o.CpuLimit
	}
	if !IsNil(o.RamLimit) {
		toSerialize["ram_limit"] = o.RamLimit
	}
	if !IsNil(o.IdleCpu) {
		toSerialize["idle_cpu"] = o.IdleCpu
	}
	if !IsNil(o.ApplicationManager) {
		toSerialize["application_manager"] = o.ApplicationManager
	}
	if o.Group.IsSet() {
		toSerialize["group"] = o.Group.Get()
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if o.LastVersionUpgrade.IsSet() {
		toSerialize["last_version_upgrade"] = o.LastVersionUpgrade.Get()
	}
	return toSerialize, nil
}

type NullablePatchedApplicationRequest struct {
	value *PatchedApplicationRequest
	isSet bool
}

func (v NullablePatchedApplicationRequest) Get() *PatchedApplicationRequest {
	return v.value
}

func (v *NullablePatchedApplicationRequest) Set(val *PatchedApplicationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchedApplicationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchedApplicationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchedApplicationRequest(val *PatchedApplicationRequest) *NullablePatchedApplicationRequest {
	return &NullablePatchedApplicationRequest{value: val, isSet: true}
}

func (v NullablePatchedApplicationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchedApplicationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


